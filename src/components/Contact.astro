---
const labelClass =
  "block mb-2 text-sm font-medium text-gray-900 dark:text-white";
const inputClass =
  "bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500";

const { id } = Astro.props;
---

<section id={id} class="py-12">
  <h1
    id="contact"
    class="mb-8 section-heading bg-clip-text bg-gradient-to-tr from-[#d7d7d7] to-[#616161]"
  >
    Love to hear from you,<br />
    Get in touch ðŸ‘‹
  </h1>
  <form id="contact-form" class="space-y-10 max-w-[570px] mx-auto" action="">
    <div
      class="grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-5 w-full justify-center"
    >
      <div>
        <label for="name" class={labelClass}>Your Name</label>
        <input type="text" id="name" class={inputClass} required />
      </div>

      <div>
        <label for="email" class={labelClass}>Your email</label>
        <input type="email" id="email" class={inputClass} required />
      </div>

      <div class="col-span-2">
        <label for="email" class={labelClass}>Message</label>
        <textarea
          class={`${inputClass} min-h-28`}
          name="message"
          id="message"
          required></textarea>
      </div>
    </div>
    <div class="text-right">
      <button
        type="submit"
        class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
        >Submit</button
      >
    </div>
  </form>
</section>
<script>
  import emailjs from "@emailjs/browser";
  const form = document.getElementById("contact-form");

  emailjs.init({
    publicKey: import.meta.env.PUBLIC_EMAILJS_PUBLIC_KEY,
    // Do not allow headless browsers
    blockHeadless: true,
    limitRate: {
      // Allow 1 request per 1s
      throttle: 1000,
    },
  });

  form.addEventListener("submit", (ev) => {
    ev.preventDefault();
    const formData = new FormData(ev.target as HTMLFormElement);

    // Get the form data entries
    const formEntries = {};
    formData.forEach((value, key) => {
      formEntries[key] = value;
    });

    emailjs
      .send(
        import.meta.env.PUBLIC_EMAILJS_SERVICE_ID,
        import.meta.env.PUBLIC_EMAILJS_TEMPLATE_ID,
        formEntries
      )
      .then((data) => {
        console.log("Success:", data); // Handle the response data
      })
      .catch((error) => {
        console.error("Error:", error); // Handle errors
      });
  });
</script>
